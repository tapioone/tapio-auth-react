{"version":3,"sources":["authConfig.js","logo.svg","LoginButton.js","LogoutButton.js","GetAccessToken.js","App.js","index.js"],"names":["loginRequest","scopes","extraQueryParameters","theme","LoginButton","instance","useMsal","className","onClick","loginRedirect","catch","e","console","error","handleLogin","LogoutButton","logoutRedirect","handleLogout","GetAccessToken","accounts","useState","accessToken","setAccessToken","style","padding","navigator","clipboard","writeText","href","target","rel","request","account","acquireTokenSilent","then","response","alert","acquireTokenRedirect","App","isAuthenticated","useIsAuthenticated","inProgress","triedSilentLogin","setTriedSilentLogin","useEffect","InteractionStatus","None","ssoSilent","err","InteractionRequiredAuthError","finally","src","logo","alt","marginLeft","display","alignSelf","width","version","viewBox","xmlns","fill","fillRule","strokeWidth","transform","d","idTokenClaims","email","msalInstance","PublicClientApplication","auth","clientId","authority","redirectUri","knownAuthorities","cache","cacheLocation","storeAuthStateInCookie","handleRedirectPromise","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9031d64.chunk.js","sourcesContent":["export const msalConfig = {\n    auth: {\n        clientId: \"e35cbc3c-7055-43a2-b978-d8d24a040140\",\n        authority: \"https://login.mytapio.one/32896ed7-d559-401b-85cf-167143d61be0/B2C_1A_TAPIO_SIGNIN/\", // https://<your-tenant>.b2clogin.com/<your-tenant>.onmicrosoft.com/<your-policyID>\n        redirectUri: \"https://tapioone.github.io/tapio-auth-react/\", // for dev use http://localhost:3000\n        knownAuthorities: [\"https://login.mytapio.one\"]\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    }\n}\n\n// msal request --> https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/request-response-object.md\nexport const loginRequest = {\n    scopes: [\"openid\", \"offline_access\", \"https://tapiousers.onmicrosoft.com/React-PKCE-SampleApp/Read\"], // https://docs.microsoft.com/en-us/azure/active-directory-b2c/access-tokens#openid-connect-scopes\n    extraQueryParameters: { theme: \"dark\" } // default is light mode\n};\n","export default __webpack_public_path__ + \"static/media/logo.30091f21.svg\";","import React from 'react';\nimport { useMsal } from \"@azure/msal-react\";\n\nimport { loginRequest } from \"./authConfig\";\n\nconst handleLogin = (instance) => {\n    instance.loginRedirect(loginRequest).catch(e => {\n        console.error(e);\n    });\n}\n\nconst LoginButton = () => {\n    const { instance } = useMsal();\n\n    return (\n        <button className=\"button\" onClick={() => handleLogin(instance)}>Login</button>\n    )\n}\n\nexport default LoginButton;","import { useMsal } from \"@azure/msal-react\";\n\nconst handleLogout = (instance) => {\n    instance.logoutRedirect().catch(e => {\n        console.error(e);\n    });\n}\n\nconst LogoutButton = () => {\n    const { instance } = useMsal();\n\n    return (\n        <button className=\"button\" onClick={() => handleLogout(instance)}>\n            Logout\n        </button>\n    )\n}\n\nexport default LogoutButton;","import { useState } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\n\nimport { loginRequest } from \"./authConfig\";\n\nconst GetAccessToken = () => {\n    const { instance, accounts } = useMsal();\n    const [accessToken, setAccessToken] = useState(null);\n\n    const RequestAccessToken = () => {\n        const request = {\n            ...loginRequest,\n            account: accounts[0] // account is needed additional to the scope\n        };\n\n        instance.acquireTokenSilent(request).then((response) => {\n            response.accessToken ?\n                setAccessToken(response.accessToken) :\n                alert(\"Could not receive an Access Token. Please check your scope.\")\n        }).catch((e) => {\n            instance.acquireTokenRedirect(request).then((response) => {\n                setAccessToken(response.accessToken);\n            });\n        });\n    }\n\n    return (\n        accessToken ?\n            <>\n                <div className=\"App-access-token-container\">\n                    {accessToken}\n                </div>\n                <button style={{ padding: \"0.5rem\" }} className=\"link align-self-center\" onClick={() => navigator.clipboard.writeText(accessToken)}>Copy token to clipboard</button>\n                <a style={{ padding: \"0.5rem\" }} className=\"link align-self-center\" href={\"https://jwt.ms/#access_token=\" + accessToken} target=\"_blank\" rel=\"noreferrer\">Check token at jwt.ms</a>\n            </>\n            :\n            <button className=\"button align-self-center\" onClick={RequestAccessToken}>Request Access Token</button>\n    );\n};\n\nexport default GetAccessToken;","import React, { useEffect, useState } from \"react\";\nimport { useIsAuthenticated, useMsal } from \"@azure/msal-react\";\nimport { InteractionStatus, InteractionRequiredAuthError } from \"@azure/msal-browser\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport LoginButton from './LoginButton';\nimport LogoutButton from \"./LogoutButton\";\nimport GetAccessToken from \"./GetAccessToken\";\nimport { loginRequest } from \"./authConfig\";\n\nconst App = () => {\n  const isAuthenticated = useIsAuthenticated();\n  const { accounts, instance, inProgress } = useMsal();\n\n  // using this state variable to only show \"unauthenticated\" flags once silent sso ran\n  // this might not be needed in real world applications that have a router etc.\n  const [triedSilentLogin, setTriedSilentLogin] = useState(false);\n\n  useEffect(() => {\n    // when refreshing the page, we silently call the authentication provider\n    // because 'isAuthenticated' will be false until a call to active directory happens\n    if (inProgress === InteractionStatus.None && !isAuthenticated && !triedSilentLogin) {\n      instance.ssoSilent(loginRequest)\n        .catch(err => {\n          // user has no active session at b2c and needs to login again\n          if (err instanceof InteractionRequiredAuthError) {\n            // inside here you could either\n            //   - Redirect to a dedicated login page\n            //   - call instance.loginRedirect(loginRequest) directly\n            // for the purpose of this demo application none of both makes actually sense\n            // for real world applications you probalby want to call loginRedirect inside here\n          }\n        })\n        .finally(() => setTriedSilentLogin(true));\n    }\n  }, [inProgress, isAuthenticated, instance, triedSilentLogin])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"App-nav\">\n          {(!isAuthenticated && triedSilentLogin) && <LoginButton />}\n          {(isAuthenticated) && <LogoutButton />}\n          <a style={{ marginLeft: \"1rem\" }} href=\"https://github.com/tapioone/tapio-auth-react\">\n            <svg style={{ display: \"flex\", alignSelf: \"center\" }} width=\"24\" version=\"1.1\" viewBox=\"0 0 33 32\" xmlns=\"http://www.w3.org/2000/svg\">\n              <g fill=\"none\" fillRule=\"evenodd\" strokeWidth=\"1\">\n                <g transform=\"translate(-136 -331)\" fill=\"#FFFFFE\">\n                  <path d=\"m152.55 331.19c-8.994 0-16.288 7.293-16.288 16.29 0 7.197 4.667 13.302 11.14 15.456 0.815 0.15 1.112-0.353 1.112-0.785 0-0.387-0.014-1.411-0.022-2.77-4.531 0.984-5.487-2.184-5.487-2.184-0.741-1.882-1.809-2.383-1.809-2.383-1.479-1.01 0.112-0.99 0.112-0.99 1.635 0.115 2.495 1.679 2.495 1.679 1.453 2.489 3.813 1.77 4.741 1.353 0.148-1.052 0.569-1.77 1.034-2.177-3.617-0.411-7.42-1.809-7.42-8.051 0-1.778 0.635-3.233 1.677-4.371-0.168-0.412-0.727-2.069 0.16-4.311 0 0 1.367-0.438 4.479 1.67 1.299-0.362 2.693-0.542 4.078-0.549 1.384 7e-3 2.777 0.187 4.078 0.549 3.11-2.108 4.475-1.67 4.475-1.67 0.889 2.242 0.33 3.899 0.163 4.311 1.044 1.138 1.674 2.593 1.674 4.371 0 6.258-3.809 7.635-7.437 8.038 0.584 0.503 1.105 1.497 1.105 3.016 0 2.178-0.02 3.935-0.02 4.469 0 0.436 0.294 0.943 1.12 0.784 6.468-2.159 11.131-8.26 11.131-15.455 0-8.997-7.294-16.29-16.291-16.29\" />\n                </g>\n              </g>\n            </svg>\n          </a>\n        </div>\n\n      </header>\n      <main className=\"App-content\">\n        {\n          (!isAuthenticated && triedSilentLogin) &&\n          <>\n            <h1>tapio Auth: Sample SPA </h1>\n            <p>This is a sample App for authentication against the tapio B2C for the tapio partners with the <strong>Authorization code flow with PKCE</strong>.\n              You can log in here with your tapio account. For more information regarding the development please check the <a href=\"https://github.com/tapioone/tapio-auth-react\" target=\"_blank\" rel=\"noreferrer\">github repo</a> and\n              the <a href=\"https://developer.tapio.one/general/authentication\" target=\"_blank\" rel=\"noreferrer\">tapio developer portal</a>.</p>\n          </>\n        }\n        <h3>\n          {isAuthenticated && \"You are authenticated.\"}\n        </h3>\n        {accounts[0] &&\n          <div className=\"App-profile\">\n            <strong>email: </strong>\n            {accounts[0].idTokenClaims?.email}\n          </div>\n        }\n\n        {isAuthenticated &&\n          <div className=\"App-access-token\">\n            <h3>Aquire Access Token Silent</h3>\n            <GetAccessToken />\n          </div>\n        }\n      </main>\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\n\nimport { msalConfig } from \"./authConfig\";\nimport './index.css';\nimport App from './App';\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n\n// handleRedirectPromise is needed when the RedirectFlow is used\n// https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications\nmsalInstance.handleRedirectPromise();\n\nReactDOM.render(\n  <React.StrictMode>\n    <MsalProvider instance={msalInstance}>\n      <App />\n    </MsalProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}